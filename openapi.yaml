openapi: 3.0.3
info:
  title: Dokumen API Web Informasi Wisata Bandung Oleh Backend Developer
  description: 
    Dokumentasi API Informasi Wisata Bandung (IWB) 
  termsOfService: https://github.com/InformasiwisataBandung/swagger
  contact:
    email: salmanakbartafisa@gmail.com 
  license:
    name: Informasi Wisata Bandung 
    url:  https://pkg.go.dev/github.com/InformasiwisataBandung/BackendGO
  version: 1.0.11
externalDocs:
  description: Repositori Google Cloud Function !
  url: github.com/InformasiwisataBandung/BackendGO
servers:
  - url: https://asia-southeast2-bustling-walker-340203.cloudfunctions.net
  - url: https://us-central1-bustling-walker-340203.cloudfunctions.net/SIgnin
  - url: https://us-central1-bustling-walker-340203.cloudfunctions.net/function-6CreateWisata
  - url: https://us-central1-bustling-walker-340203.cloudfunctions.net/function-7ReadWisata
  - url: https://us-central1-bustling-walker-340203.cloudfunctions.net/function-8UpdateWisata
  - url: https://us-central1-bustling-walker-340203.cloudfunctions.net/function-9DeleteWisata
  - url: https://asia-southeast2-bustling-walker-340203.cloudfunctions.net/function-PasetoGIS-2
tags:
  - name: data
    description: Data
    externalDocs:
      description: Deskripsi Kode Program
      url: https://petapedia.github.io/gcf/get/
  - name: Tes Sign up (register)
    description: Auth Access 
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://us-central1-bustling-walker-340203.cloudfunctions.net/SIgnin
  - name: Tes Sign in
    description: Mendapatkan Token
paths:
  /7ReadWisata:
    get:
      tags:
        - data
      summary: Get Data TempatWisata
      description: List Data Geospasial
      operationId: getGeoJSON
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Peta'
        '400':
          description: Invalid status value
  /function-Signup:
    post:
      tags:
        - auth
      summary: Signup
      description: Signup and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey

  /SIgnin:
    post:
      tags:
        - user
      summary: Login Mendapatkan Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
      security:
        - token:
          - write: apiKey
          - read: apiKey
  /function-9DeleteWisata:
    delete:
      tags:
        - Wisata
      summary: Menghapus Konten
      description: Hapus konten sesuai dengan kebutuhan
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
      security:
components:
  schemas:
    Peta:
      type: object
      properties:
        type:
          type: string
        geometry:
          type: object
          properties:
            type: 
              type: string
            coordinates: 
              type: array
        properties:
          type: object
          properties:
            name:
              type: string
    Auth:
      type: object
      properties:
        username:
          type: string
          example: username
        password:
          type: string
          example: password
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: fehguy
        token:
          type: string
          example: fehguy
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    token:
      type: apiKey
      name: token
      in: header
