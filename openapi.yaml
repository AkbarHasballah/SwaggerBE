openapi: 3.0.3
info:
  title: DOKUMEN GIS PASETO Salman Akbar  - OpenAPI 3.0
  description: >-
    Jelaskan disini apa saja yang perlu dijelaskan
    termasuk informasi yang diperlukan untuk dinilai
    term of service isi dari link repo dari swagger ini
  termsOfService: https://akbarhasballah.github.io/SwaggerBE
  contact:
    email: salmanakbartafisa@gmail.com
  license:
    name: Akbar Hasbullah GIS
    url: 
  version: 1.0.11
externalDocs:
  description: Repo GCF
  url: 
servers:
  - url: https://asia-southeast2-bustling-walker-340203.cloudfunctions.net
  - url: https://asia-southeast2-projeku-407007.cloudfunctions.net
tags:
  - name: Login 
    description: Mendapatkan Token Paseto
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pkg.go.dev/github.com/AkbarHasballah/BEGISNEW
  - name: Geojson
    description: Access GeoJson
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pkg.go.dev/github.com/AkbarHasballah/BEGISNEW
paths:
  /LoginNew121:
    post:
      tags:
        - Login
      summary: Login 
      description: Input Username dan Password
      operationId: MembuatTokenUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormatLoginUser'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BerhasilDapetToken'
        '400':
          description: failed operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gagal'
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /function-PostGeoIntersects:
    post:
      tags:
        - Geojson
      summary: GeoIntersect
      description: Menentukan apakah suatu bentuk geometri (polygon) memotong (intersect) dengan data lokasi yang disimpan dalam MongoDB
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: Tipe geometri.
                  example: LineString
                coordinates:
                  type: array
                  description: Koordinat titik awal dan akhir.
                  items:
                    type: array
                    items:
                      type: number
                  example: 
                    - [107.60553876023783, -6.920654484885233]
                    - [107.60881979989551, -6.920982659495408]
              required:
                - type
                - coordinates
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /function-PostGeoWithin:
   post:
      tags:
        - Geojson
      summary: Mengirimkan data dengan operasi GeoWithin.
      description: Menentukan apakah suatu data lokasi berada di dalam suatu bentuk geometri (polygon) tertentu.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: Tipe geometri.
                  example: Polygon
                coordinates:
                  type: array
                  description: Koordinat sudut-sudut poligon.
                  items:
                    type: array
                    items:
                      type: number
                  example: 
                    - [107.60694385840507, -6.912996091717176]
                    - [107.61177816685873, -6.9128396362407045]
                    - [107.61138406562608, -6.915577599599189]
                    - [107.60662857741897, -6.915916584434925]
                    - [107.60694385840507, -6.912996091717176]
              required:
                - type
                - coordinates
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      security:
        - token:
            - write:apiKey
            - read:apiKey  
  /function-PostBox:
   post:
      tags:
        - Geojson
      summary: Operator box
      description: Menentukan sebuah kotak (box) di sekitar suatu wilayah tertentu dalam sistem koordinat geografis. Data yang memiliki lokasi di dalam kotak tersebut akan dipilih.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coordinates:
                  type: array
                  description: Koordinat titik awal dan akhir.
                  items:
                    type: array
                    items:
                      type: number
                  example: 
                    - [107.59742152162316, -6.870072381191093]
                    - [107.56994102793819, -6.886623456211993]
              required:
                - type
                - coordinates
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      security:
        - token:
            - write:apiKey
            - read:apiKey  
  /function-PostNear:
   post:
      tags:
      - Geojson        
      summary: Mengirimkan data dengan operasi Near.
      description: Mencari data lokasi yang berada paling dekat dengan suatu titik atau koordinat tertentu.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coordinates:
                  type: array
                  description: Koordinat titik referensi.
                  items:
                    type: number
                  example: [107.60740910955903, -6.919179422938399]
                min:
                  type: number
                  description: Jarak minimum dalam satuan tertentu (misalnya meter).
                  example: 1
                max:
                  type: number
                  description: Jarak maksimum dalam satuan tertentu (misalnya meter).
                  example: 500
              required:
                - coordinates
                - min
                - max
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error  
      security:
        - token:
            - write:apiKey
            - read:apiKey  
  /function-PostCenter:
    post:
      tags:
      - Geojson
      summary: Mengirimkan data dengan operasi Center.
      description: 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coordinates:
                  type: array
                  description: Koordinat titik tengah.
                  items:
                    type: number
                  example: [107.6083558921371, -6.914697883252515]
                radius:
                  type: number
                  description: Radius dalam satuan tertentu (misalnya kilometer).
                  example: 0.5
              required:
                - coordinates
                - radius
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      security:
        - token:
            - write:apiKey
            - read:apiKey  
  /function-PostNearSphere:
    post:
      tags:
      - Geojson
      summary: Mengirimkan data dengan operasi NearSphere.
      description: Mengirimkan data menggunakan operasi NearSphere.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: Tipe geometri.
                  example: Point
                coordinates:
                  type: array
                  description: Koordinat titik referensi.
                  items:
                    type: number
                  example: [107.60740910955903, -6.919179422938399]
                min:
                  type: number
                  description: Jarak minimum dalam satuan tertentu (misalnya meter).
                  example: 1
                max:
                  type: number
                  description: Jarak maksimum dalam satuan tertentu (misalnya meter).
                  example: 500
              required:
                - type
                - coordinates
                - min
                - max
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      security:
        - token:
            - write:apiKey
            - read:apiKey  
               
components:
  schemas:
    FormatLoginUser:
      example:
        username: "Budi"
        password: "AnakIT"
    BerhasilDapetToken:
      example:
        status: true
        message: "berhasil login"
        token: "v4.public xxxx"
    FormatGeointersect:
      example:
        type: "LineString"
        coordinates: [ [],
                [] ] 
    SuccessGeoIntersect:
      example:
      type: "Feature"
      properties:
    Gagal:
      example:
        status: false
        message: "Salah Menginputkan"
  securitySchemes:
    token:
      type: apiKey
      name: token
      in: header
